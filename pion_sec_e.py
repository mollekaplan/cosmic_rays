#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jul 23 15:32:27 2018

@author: mollykaplan

Uses the parameterization functions in pion_param to create the total
injection spectrum for secondary leptons from charged pion decay.
"""

import pion_param as pp
import numpy as np
import matplotlib.pyplot as plt
from protons import proton_spec
from ko_sec_e import ko_sec

"""
Outputs the secondary lepton injection spectrum Q. Ee is an array of 
lepton energy values, nel is the size of Ee, Ep is an array of
proton energies, NEp is the steady state proton spectrum at the 
energies in Ep, and density is the ambient gas density.
"""
def pion_sec(Ee,nel,Ep,NEp,density):
    x=np.log10(Ee)
    
    width = 10.**((4.5 + 2.)/1121.) - 1.
    
    rese=np.zeros(nel)
    resp=np.zeros(nel)
    for bb in range(len(Ep)):
        if Ep[bb]<0.488: continue  #skip low energy protons
        
        #finding electron injections spectrum
        diff_e=pp.e_d(x,Ep[bb],nel)
        Ndiff_e=pp.e_nd(x,Ep[bb],nel)
        r1_e=pp.e_res(x,Ep[bb],nel)
        rese += (NEp[bb]*Ep[bb])*\
                (diff_e + Ndiff_e + r1_e) *width
        
        #finding positron injection spectrum
        diff_p=pp.p_d(x,Ep[bb],nel)
        Ndiff_p=pp.p_nd(x,Ep[bb],nel)
        r1_p=pp.p_res(x,Ep[bb],nel,1)
        r2_p=pp.p_res(x,Ep[bb],nel,2)
        resp += (NEp[bb]*Ep[bb])*\
                (diff_p + Ndiff_p + r1_p + r2_p) * width 
    
    #calultion of total (electron+positron) injection spectrum
    res_tot=rese+resp
    Q=9.4605284e-4*density*res_tot/Ee
    return (Ee,Q)

########### testing #############
#density,tau_0= 1e2,1e-1
#pro=proton_spec(density,tau_0)
##pro=proton_spec()
#Ep=pro[0]
#NEp=pro[1]
#
##NEp=np.zeros(len(Ep))
##for i in range(len(Ep)): NEp[i]=Ep[i]**(2.7)
#
#    
#Emin_s=1e-4
#Emax_s=1e5
#npts_s=100
#x_s0=np.geomspace(Emin_s,Emax_s,npts_s)
#x_s=np.delete(np.delete(x_s0,0),-1) 
#
#x0=np.geomspace(1e-4,1e6,100)
#x=np.delete(np.delete(x0,0),-1) 
#
#s=2.2
#
#N_ratio=(5.1099891e-4/.9383)**(.5*(s-1.))
#
#e_spec=np.array([712.3487861212187, 534.842734936029, 401.0064836681453, 300.19660468699, 224.3557717279453, 167.38221982159595, 124.65350486654083, 92.66708542548776, 68.76918850159032, 50.95019103962197, 37.68994774229452, 27.8405420355388, 20.53709507891926, 15.129699927208327, 11.131372786839231, 8.178243231476237, 5.999155060135182, 4.392526252816713, 3.2088072920446313, 2.337244144705966, 1.695935317957662, 1.2243954793931218, 0.8780152463265547, 0.6239466717993704, 0.43805278763240424, 0.30264237539601163, 0.20477367440157274, 0.1349616659113897, 0.08617480308712433, 0.053065692533993895, 0.031431475385463786, 0.017906204510200866, 0.009836068407266297, 0.005232944496626626, 0.0027108918054313674, 0.0013748866568982277, 0.0006859779347940851, 0.000338049425178384, 0.00016506050752877318, 8.004551724111228e-05, 3.8621942878553495e-05, 1.8565333840118963e-05, 8.899366887974422e-06, 4.257042040709288e-06, 2.0331676401314775e-06, 9.698851297410492e-07, 4.622450957562875e-07, 2.2015137144609688e-07, 1.0479416936228848e-07, 4.9862309075646834e-08, 2.3717434776060218e-08, 1.1278578382944787e-08, 5.362367960288894e-09, 2.549138711626011e-09, 1.2116576401863005e-09, 5.758745890324094e-10, 2.7368250402560354e-10, 1.3006040147090274e-10, 6.180569809530195e-11, 2.936991475172301e-11, 1.3956359246383227e-11, 6.631942311585208e-12, 3.151459692073808e-12, 1.4975726343993078e-12, 7.116578650041865e-13, 3.3819191181589007e-13, 1.6071791870303625e-13, 7.637899509434264e-14, 3.6298633888440774e-14, 1.7250828735071918e-14, 8.198378762972123e-15, 3.896167144733056e-15, 1.8515279271321304e-15, 8.79823976110183e-16, 4.1804410823127705e-16, 1.9860726712200875e-16, 9.434052089826952e-17, 4.4803450036538697e-17, 2.1272071737075456e-17, 1.009628215939727e-17, 4.789885353028705e-18, 2.2711509301603205e-18, 1.0760964644823035e-18, 5.093813790356671e-19, 2.40818691708525e-19, 1.1366196379710758e-19, 5.352751908684661e-20, 2.5133148330421558e-20, 1.1753581512669151e-20, 5.46653123573251e-21, 2.523289183968229e-21, 1.1524306325455773e-21, 5.183921228521446e-22, 2.2799712223151614e-22, 9.683538687606895e-23, 3.8793586549935397e-23, 1.3901264227515745e-23, 3.759964221470886e-24])
#e_sec_spec=np.array([981.32048463195, 622.0573175176881, 387.80448323749994, 237.54524606506243, 142.93993223857817, 84.64164237579386, 49.547318778374226, 29.029317834775323, 17.360554706334256, 10.529280280841501, 6.413782270639954, 3.9376966134681752, 2.440035272616257, 1.5278938665064703, 0.968024665140977, 0.6214373899395376, 0.4050189839139633, 0.2686953036832819, 0.18203795080755644, 0.12637818359464761, 0.09015101702914446, 0.06613309559511599, 0.04978640942555112, 0.03824624888672548, 0.029700649414022277, 0.023022592447985064, 0.017554773914305464, 0.01296816612594564, 0.00914838133999447, 0.006091367762900554, 0.003805208032113049, 0.00223506246947131, 0.0012464567827550092, 0.0006684021931833057, 0.00034780355753267524, 0.00017632979247510924, 8.7308536716991e-05, 4.236885243098222e-05, 2.0238212380531803e-05, 9.553968932708916e-06, 4.4716213671650924e-06, 2.079864286306211e-06, 9.630551993021567e-07, 4.4452447578861647e-07, 2.0474438594973063e-07, 9.417284157855705e-08, 4.327856478217857e-08, 1.9880581319354552e-08, 9.13114819134459e-09, 4.194240067970583e-09, 1.926929764658724e-09, 8.854839055352912e-10, 4.069878513618254e-10, 1.8707538515983886e-10, 8.598221660030871e-11, 3.950590789708091e-11, 1.814133794989905e-11, 8.323666482247685e-12, 3.814853042692546e-12, 1.7459712814633484e-12, 7.977591078282452e-13, 3.6380040616648667e-13, 1.655370314749884e-13, 7.513703639810435e-14, 3.401170107384109e-14, 1.5349976193003713e-14, 6.90528586050819e-15, 3.095554139011595e-15, 1.3824955449290034e-15, 6.14950624024835e-16, 2.7236193436931064e-16, 1.2007582091482645e-16, 5.267862211268967e-17, 2.299007573831074e-17, 9.977372567806831e-18, 4.304062970768356e-18, 1.844589479275314e-18, 7.848297701670313e-19, 3.311883958780276e-19, 1.3840757866297974e-19, 5.715450049410724e-20, 2.3238240732062325e-20, 9.249194055076161e-21, 3.5681456179953965e-21, 1.2872729308802261e-21, 4.2255508034856987e-22, 1.1768600503150095e-22, 1.0656422582044844e-23, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])
#e_spec_full=np.array([1693.6692684143318, 1156.9000524537169, 788.8109669732974, 537.7418508190217, 367.29570384811916, 252.02386231489714, 174.20082369447238, 121.69640331464443, 86.12974326211922, 61.47947132401252, 44.103729978739, 31.77823856268418, 22.97713033582341, 16.65759379159531, 12.099397453071017, 8.799680622477945, 6.404174045040847, 4.66122155750352, 3.3908452431994163, 2.4636223289920505, 1.7860863353107828, 1.2905285752898934, 0.9278016560400286, 0.6621929209586221, 0.4677534372502496, 0.32566496807893025, 0.2223284484003815, 0.14792983211163846, 0.09532318449040665, 0.05915706029689445, 0.035236683417576825, 0.020141266979672175, 0.011082525190021309, 0.0059013466898099306, 0.0030586953629640414, 0.0015512164493733365, 0.0007732864715110759, 0.0003804182776093663, 0.000185298719909305, 8.959948538899708e-05, 4.3093564245718585e-05, 2.064519812642517e-05, 9.862422087276582e-06, 4.701566516497903e-06, 2.2379120260812084e-06, 1.0640579713196057e-06, 5.055236605384661e-07, 2.400319527654514e-07, 1.1392531755363306e-07, 5.405654914361742e-08, 2.5644364540718938e-08, 1.2164062288480078e-08, 5.769355811650721e-09, 2.7362140967858488e-09, 1.2976398567866092e-09, 6.153804969294903e-10, 2.9182384197550265e-10, 1.3838406795315042e-10, 6.56205511379945e-11, 3.111588603318636e-11, 1.4754118354211475e-11, 6.995742717751693e-12, 3.316996723548797e-12, 1.572709670797412e-12, 7.456695660780275e-13, 3.535418880088938e-13, 1.6762320456354438e-13, 7.947454923335424e-14, 3.768112943336977e-14, 1.7865779359096754e-14, 8.470740697341433e-15, 4.016242965647883e-15, 1.90420654924482e-15, 9.028140518484938e-16, 4.2802148079908393e-16, 2.029113300927771e-16, 9.618511037754481e-17, 4.5588279806705727e-17, 2.1603260132953484e-17, 1.0234689738060253e-17, 4.847039853522811e-18, 2.294389170892383e-18, 1.0853456585373796e-18, 5.129495246536625e-19, 2.421059646394052e-19, 1.1408451887745614e-19, 5.364520509187811e-20, 2.51438047530036e-20, 1.1753581512669151e-20, 5.46653123573251e-21, 2.523289183968229e-21, 1.1524306325455773e-21, 5.183921228521446e-22, 2.2799712223151614e-22, 9.683538687606895e-23, 3.8793586549935397e-23, 1.3901264227515745e-23, 3.759964221470886e-24])
#    
#f1 = plt.figure(figsize=(11,6))
#ax1 = f1.add_subplot(111)
#ko,=plt.plot(x_s0,ko_sec(x_s0,Ep,NEp,density)[1],'b',
#             label='knock-on secondaries')
#pi,=plt.plot(x_s0,pion_sec(x_s0,npts_s,Ep,NEp,density)[1],'r',
#             label='pion decay secondaries')
##sec,=plt.plot(x,e_sec_spec,'r',label='secondaries')
#pri,=plt.plot(x,e_spec_full,'b',label='primaries')
#ax1.set_xscale('log')
#ax1.set_yscale('log')
##ax1.set_xlim(1e-1,1e1)
##ax1.set_ylim(1e-9,1e-1)
#plt.legend(handles=[ko,pi,pri],fontsize=15)
##plt.legend(handles=[sec,pri],fontsize=15)
